<p id="notice"><%= notice %></p>

<h1>Listing Monsters</h1>
<h2><%= "with names starting with '#{params[:starts_with]}'" unless params[:starts_with].to_s.empty? %></h2>

<%= page_entries_info @monsters %>

<table>
  <thead>
    <tr>
      <th><%= sortable "name" %></th>
      <th>Aliases</th>
      <th>Class</th>
      <th>Description</th>
      <th colspan="2"></th>
    </tr>
  </thead>

  <tbody>
    <% @monsters.each do |monster| %>
      <tr>
        <td><%= link_to monster.name, monster.specific %></td>
	<td><%= monster.names_to_s %></td>
	<td><%= monster.monster_class_name %></td>
        <td><%= truncate monster.description, :length => 60, :separator => /\s/, :omission => "\u2026" %></td>
        <td><%= link_to 'Edit', edit_polymorphic_path(monster.specific) %></td>
        <td><%= link_to 'Destroy', monster.specific, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>
Filter by first letter of name:
<% Monster.group("substr(upper(name), 1,1)").count.map do |starting_character, count| %>
  <span style="padding-right: 5px;"><%= link_to "#{starting_character}", monsters_path(:starts_with => "#{starting_character}") %></span>
<% end %>
  <span style="padding-right: 5px;"><%= link_to "(All)", monsters_path %></span>
<br>

<%= paginate @monsters %>
<%= link_to 'New Creature', new_creature_path %>

<% filter_params.each do |filter| %>
  <% if filter[0].to_s =~ /in_campaign/ %>
    <% next %><%# skip any mention of the filtering by selected campaign %>
  <% end %>
  <% if filter[0].to_s =~ /inherent_only/ %>
    <% next %><%# skip any mention of filtering RPMSpellEffect by "inherent" %>
  <% end %>
  <span>
    <%= "#{filter[0].titleize.downcase}" %>
    <% if filter[0].to_s =~ /in_equipment_category/ %>
      <% display_param = equipment_category_name %>
    <% elsif filter[0].to_s =~ /in_modifier_category/ %>
      <% display_param = equipment_modifier_category_name %>
    <% elsif filter[0].to_s =~ /with_path/ %>
      <% display_param = rpm_path_name %>
    <% elsif filter[0].to_s =~ /with_effect/ %>
      <% display_param = rpm_effect_name %>
    <% elsif filter[0].to_s =~ /with_potency/ %>
      <% display_param = rpm_potency_name %>
    <% else %>
      <% display_param = filter[1] %>
    <% end %>
    <% if filter_params.count > 1 %>
      <% new_params = {filter[0] => filter[1]} %>
      <%= link_to "'#{display_param}'", params.reject{ |key, val| key.to_s == filter[0].to_s }, :class => "quiet", :title => "remove filter" %>
    <% else %>
      <%= "'#{display_param}'" %>
    <% end %>
  </span>
<% end %>
<% if params[:sort].present? %>
  <span>
  <%= link_to "sorted", params.reject{ |key, val| key.to_s == :sort.to_s || key.to_s == :direction.to_s }, :class => "quiet", :title => "remove sort" %>
  </span>
<% end %>